{
    "tyk-github-id": {
        "azureConfig": {
            "openAIKey": "xxx",
            "openAIEndpoint": "",
            "modelDeployment": "gpt-4o-mini"
        },
        "selectOperations": {
            "gists/create-comment": {
                "x-nl-input-examples": [
                    "Add a comment to my gist titled 'Python Utilities' with my feedback: 'The second line must be fixed'",
                    "Create a comment on the gist with ID 20384fe099243335bc81c608ea89e1de: 'That is wonderfull'"
                ]
            },
            "gists/list-comments": {
                "x-nl-input-examples": [
                    "List comments of GIST 20384fe099243335bc81c608ea89e1de",
                    "What are the feedback I've received on my gist 20384fe099243335bc81c608ea89e1de ?",
                    "Is there negative comment on my most recent gist ?"
                ]
            },
            "gists/list-public": {
                "x-nl-input-examples": [
                    "Fetch the latest public gists and filter them by creation date",
                    "I only want the first 10 entries of the 4th page. Only give me the descriptions in markdown, and translate them in french",
                    "I'm looking to display only the file names of public gists from the second page",
                    "Can you download the content of all public gists that include Python files ?",
                    "I intend to read and review the titles of all public gists created this week",
                    "I aim to access public gists and read the tags applied to each one"
                ]
            },
            "gists/list-starred": {
                "x-nl-input-examples": [
                    "I want to see which gists I've starred recently and read their descriptions",
                    "What are the gists that I prefer ?",
                    "I need to access my starred gists on GitHub to share a specific one with a colleague",
                    "Give me my starred gists about zig programming language"
                ]
            },
            "issues/add-assignees": {
                "x-nl-input-examples": [
                    "Add to assignees the user #NAME# to the issue #NB#",
                    "Add #NAME# to the assignees of the issue #NB#",
                    "Add the user #NAME# to the assignees of the issue #NB#"
                ]
            },
            "issues/add-labels": {
                "x-nl-input-examples": [
                    "Add label 'bug' to issue #NB of repository"
                ]
            },
            "issues/create": {
                "x-nl-input-examples": [
                    "Create a bug in repo",
                    "I want to say that there is a vulnerability issue",
                    "Add an issue about",
                    "Create an issue about"
                ]
            },
            "issues/get": {
                "x-nl-input-examples": [
                    "Give me details for issue #NB",
                    "show me details of issue #NB"
                ]
            },
            "issues/list-comments": {
                "x-nl-input-examples": [
                    "List comments for issue #NB of repository",
                    "List comments for issue #NB of repository with 50 results per page"
                ]
            },
            "issues/list-comments-for-repo": {
                "x-nl-input-examples": [
                    "List comments for issue",
                    "List comments for issue with 50 results per page"
                ]
            },
            "issues/list-for-repo": {
                "x-nl-input-examples": [
                    "List the issues for the repository",
                    "Give issues in the repository to address any pending items",
                    "Issues that are already closed",
                    "Give me the last issues on repo for",
                    "Give me last issues on repo.",
                    "Give me issues assigned to",
                    "Give me issues list",
                    "last 3 issues in the repo"
                ]
            },
            "issues/remove-assignees": {
                "x-nl-input-examples": [
                    "delete the user #NAME# from assignee on the issue #NB#",
                    "remove #NAME# from the assignees of the issue #NB#"
                ]
            },
            "issues/update": {
                "x-nl-input-examples": [
                    "Update title of issue #ID to",
                    "Assign issue #ID to",
                    "Set title of issue #ID to ",
                    "Add label to issue #ID",
                    "Set state of issue #ID to open",
                    "Set state of issue #ID to closed"
                ]
            },
            "pulls/create": {
                "x-nl-input-examples": [
                    "Create a pull request for repository",
                    "From branch, create a pull request to with title"
                ]
            },
            "pulls/create-review-comment": {
                "x-nl-input-examples": [
                    "Create a comment for pull request #ID on repository NAME/OWNER",
                    "Add a comment for pull request"
                ]
            },
            "pulls/get": {
                "x-nl-input-examples": [
                    "Get the status of the pull request #ID on repository",
                    "Give me details on pull request #ID",
                    "return the id of the pull request #ID"
                ]
            },
            "pulls/list": {
                "x-nl-input-examples": [
                    "Give me the list of pull requests for repository",
                    "show me pull requests for repository"
                ]
            },
            "pulls/list-review-comments": {
                "x-nl-input-examples": [
                    "Give me comments for pull requests #ID on repository NAME/OWNER",
                    "Show me list of comments for the pull request #ID"
                ]
            },
            "pulls/update": {
                "x-nl-input-examples": [
                    "Update the state of the pull request #ID on repository",
                    "change the state of the pull request #ID to",
                    "close the pull request #ID",
                    "change the base of the pull request #ID to"
                ]
            },
            "repos/delete-release": {
                "x-nl-input-examples": [
                    "Delete release #nb",
                    "Remove last release from repository"
                ]
            },
            "repos/get-readme": {
                "x-nl-input-examples": [
                    "Show me the README for repository owned by",
                    "Give readme.md content in the repository"
                ]
            },
            "repos/get-release": {
                "x-nl-input-examples": [
                    "Give me details for release #nb",
                    "return details for release",
                    "what about release #nb?"
                ]
            },
            "repos/list-commits": {
                "x-nl-input-examples": [
                    "List the commits for repository",
                    "Give commits in",
                    "Commits created by author",
                    "last 3 commits in",
                    "last 3 commits in the repo created by author.",
                    "Give commits in the repo created by author on branch",
                    "last 3 commits in the repo",
                    "Give me the last commits on repo for"
                ]
            },
            "repos/list-releases": {
                "x-nl-input-examples": [
                    "List the releases for repository owned by",
                    "Give releases in repository",
                    "What are the list of releases for repository"
                ]
            },
            "repos/list-tags": {
                "x-nl-input-examples": [
                    "List the tags for repository",
                    "Give tags in the repository by"
                ]
            }
        },
        "selectModelEmbedding": "MiniLM-L6-v2.Q8_0.gguf",
        "selectModelsPath": "../tyk-release-v5.8.0-alpha8/models",
        "llmConfig": {
            "AzureConfig": {
                "openAIKey": "xxx",
                "modelDeployment": "gpt-4o-mini"
            }
        },
        "APIID": "tyk-github-id"
    },
    "tyk-gmail-id": {
        "azureConfig": {
            "openAIKey": "xxx",
            "openAIEndpoint": "",
            "modelDeployment": "gpt-4o-mini"
        },
        "selectOperations": {
          "gmail.users.drafts.create": {
            "x-nl-input-examples": [
              "Creates a new draft",
              "Creates a new draft with the label.",
			  "Add a new draft on my mailbox with subject "
            ]
          },
          "gmail.users.drafts.delete": {
            "x-nl-input-examples": [
              "deletes the draft",
              "deletes the draft from my mailbox",
			  "remove the draft",
			  "remove the draft with id from my mailbox"
            ]
          },
          "gmail.users.drafts.get": {
            "x-nl-input-examples": [
              "gets the draft",
			  "show me details of draft",
			  "show me details of draft on my mailbox",
			  "give me details of draft",
			  "give me details of draft on my mailbox"
            ]
          },
          "gmail.users.drafts.list": {
            "x-nl-input-examples": [
              "give me a list of drafts of my drafts",
              "give me the list of drafts in my mailbox",
              "show me the list of drafts",
			  "show me my drafts",
			  "show me my drafts in my mailbox",
			  "what is the list of my drafts?",
			  "what is the list of my draft currently on my mailbox?",
			  "show me the list of my current draft",
              "search for drafts with"
            ]
          },
          "gmail.users.drafts.send": {
            "x-nl-input-examples": [
			  "Send my draft with id to ",
			  "Take the draft and send it to ",
              "Sends the specified, existing draft to the recipients in the `To`, `Cc`, and `Bcc` headers."
            ]
          },
          "gmail.users.drafts.update": {
            "x-nl-input-examples": [
              "updates the draft content to",
			  "update my draft with content",
			  "set content of my draft to",
			  "change content of draft to"
            ]
          },
          "gmail.users.history.list": {
            "x-nl-input-examples": [
              "Lists the history of all changes to the given mailbox",
			  "give me the history of my mailbox",
			  "what is the history of my mailbox"
            ]
          },
          "gmail.users.labels.create": {
            "x-nl-input-examples": [
              "Creates a new label on my mailbox",
			  "create a new label with name",
			  "create a new label named on my mailbox",
			  "add a label with name",
			  "add a new label with name on my mailbox"
            ]
          },
          "gmail.users.labels.delete": {
            "x-nl-input-examples": [
              "Delete the label with the ID",
			  "Delete the label from my mailbox",
			  "remove the label",
			  "remove the label with id from my mailbox"
            ]
          },
          "gmail.users.labels.get": {
            "x-nl-input-examples": [
              "give me the label with id",
			  "give me the label on my mailbox",
			  "show me details of the label",
			  "show me details of the label on my mailbox"
            ]
          },
          "gmail.users.labels.list": {
            "x-nl-input-examples": [
              "Lists all labels",
              "give me all labels on my mailbox",
              "show me all labels"
            ]
          },
          "gmail.users.labels.update": {
            "x-nl-input-examples": [
              "update label with name=",
			  "change name of label to",
			  "update the name of the label to",
			  "on my mailbox, I want to update the label",
			  "update the visibility of my label to",
			  "update the color of my label to"
            ]
          },
          "gmail.users.messages.delete": {
            "x-nl-input-examples": [
              "delete the message with id",
              "delete the message with id from my mailbox",
              "remove the message with id",
			  "remove the message with id from my mailbox"
            ]
          },
          "gmail.users.messages.get": {
            "x-nl-input-examples": [
              "give me details of the message with id",
			  "show me my message",
			  "show me my message with id",
			  "show me message with id from my mailbox",
              "show me the message with id",
              "show me the message with id in full format"
            ]
          },
          "gmail.users.messages.list": {
            "x-nl-input-examples": [
              "Lists all messages",
              "give me all messages on my mailbox",
              "show me all messages",
              "show me all my messages with"
            ]
          },
          "gmail.users.messages.modify": {
            "x-nl-input-examples": [
              "update message and add labels",
			  "update message with id and remove label",
			  "add label on message",
			  "add label on message with id",
			  "remove label from message",
			  "remove label from message with id"
            ]
          },
          "gmail.users.messages.send": {
            "x-nl-input-examples": [
              "Send an email to ",
			  "send an email to with subject  ",
			  "send an email with subject to ",
			  "send a message to with subject. The content of the message must be",
			  "write an email to with subject ",
			  "write an email to with subject with content ",
			  "write a message to with subject with content ",
			  "write an email to ",
			  "write an email to the subject must be, and the content",
              "Tell to 'test@example.com' that his new car is available.",
              "Write a professional email to reject the candidate 'John Doe \u003ctest@example.com'"
            ]
          },
          "gmail.users.messages.trash": {
            "x-nl-input-examples": [
              "move the message to the trash",
			  "move the message with id to the trash",
			  "move to the trash the message"
            ]
          },
          "gmail.users.messages.untrash": {
            "x-nl-input-examples": [
              "remove the message from the trash",
			  "remove the message with id from the trash",
			  "remove from the trash the message"
            ]
          },
          "gmail.users.messages.attachments.get": {
            "x-nl-input-examples": [
              "gets attachment from message"
            ]
          },
          "gmail.users.threads.list": {
            "x-nl-input-examples": [
              "List of threads in my mailbox",
              "What are the current conversations ?",
              "What are my current threads ?"
            ]
          }
        },
        "selectModelEmbedding": "MiniLM-L6-v2.Q8_0.gguf",
        "selectModelsPath": "../tyk-release-v5.8.0-alpha8/models",
        "llmConfig": {
            "AzureConfig": {
                "openAIKey": "xxx",
                "modelDeployment": "gpt-4o-mini"
            }
        },
        "APIID": "tyk-gmail-id"
      }
      

}
